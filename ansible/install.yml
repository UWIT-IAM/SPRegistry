#
# spreg install playbook
#

- hosts: "{{ target }}"
  serial: 1
  max_fail_percentage: 10
  gather_facts: false
  remote_user: iamcert
  vars:
    app_name: spreg
    spreg_root: /data/local/spreg

  tasks:

  # copy spreg properties file
  # change restarts tomcat
  - name: copy properties file
    copy: "src=../spreg.properties.{{ cluster_type }}  dest={{ spreg_root }}/spreg.properties group=iam-dev mode=664"
    notify: restart tomcat
 
  # configure tomcat startup properties
  # change restarts tomcat
  # - name: tomcat startup params
  #   daemon_config: "service=tomcat key=spreg.properties.path value=file:{{ spreg_root }}"
  #   notify: restart tomcat

  # update http and https config
  # change restarts apache
  - include: "ansible-tools/tasks/apache_config.yml file=https prod=spreg"
  - include: "ansible-tools/tasks/apache_config.yml file=http prod=spreg"


  # copy the attributes data file
  # until this is in the dataabse 
  - name: copy attribute data
    copy: "src=../attribute.xml dest={{ spreg_root }}/attribute.xml group=iam-dev mode=664"
    notify: restart tomcat

  # update the spreg.war file
  - name: copy war
    copy: "src=../target/spreg.war dest=/data/webapps/spreg.war group=iam-dev mode=664"
    notify: restart tomcat

  # copy xmlsectool
  - name: copy xmlsectool
    synchronize: "src=../xmlsectool  dest={{ spreg_root }} "

  # run any handlers 
  - meta: flush_handlers


  # handlers mostly standard from iam-ansible

  handlers:
# restart tomcat
  #   causes a temporary outage
  #   on clustered systems loadr idle is required
  #   five steps

  # restart tomcat ( 1. dle loadr,  2. wait xxx seconds  )
  - name: restart tomcat
    command: /usr/bin/nohup /data/local/bin/ansible_command loadr idle
    notify:
      - idle wait
      - continue restart tomcat

  # restart tomcat ( 3. actual restart )
  - name: continue restart tomcat
    command: /usr/bin/nohup /data/local/bin/ansible_command tomcat restart
    notify:
      - wait_for_tomcat

  # restart tomcat ( 4. wait for apps to start )
  - name: wait_for_tomcat
    shell: "c=0;while [ $c -lt 20 ]; do wget -O /dev/null -q  http://localhost/tomcatmanager/text/serverinfo;[ $? -eq 0 ] && exit 0;let c=c+1;sleep 5; done;exit 1"
    register: wait_result
    failed_when: "wait_result.rc != 0"
    notify:
      - restart loadr

  # restart tomcat ( 5. restart loadr )
  - name: restart loadr
    command: /usr/bin/nohup /data/local/bin/ansible_command loadr start
