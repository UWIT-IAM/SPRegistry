#
# spreg install playbook
#

- hosts: "{{ target }}"
  serial: 1
  max_fail_percentage: 10
  gather_facts: false
  remote_user: iamcert

  tasks:
  # copy spreg properties file
  # change restarts tomcat
  - name: copy properties file
    copy: "src=../spreg.properties.{{ cluster_type }}  dest={{ spreg_root }}/spreg.properties group=iam-dev mode=664"
    notify: restart tomcat
 
  # configure tomcat startup properties
  # change restarts tomcat
  # - name: tomcat startup params
  #   daemon_config: "service=tomcat key=spreg.properties.path value=file:{{ spreg_root }}"
  #   notify: restart tomcat

  #- name: copy http apache config
  #  template: "src=apache/http.gws dest=/data/conf/apache.conf.d/http.gws group=iam-dev mode=644"
  #  notify: restart_apache

  #- name: copy https apache config
  #  template: "src=apache/https.gws dest=/data/conf/apache.conf.d/https.gws group=iam-dev mode=644"
  #  notify: restart_apache


  # copy the attributes data file
  # until this is in the dataabse 
  - name: copy attribute data
    copy: "src=../attribute.xml dest={{ spreg_root }}/attribute.xml group=iam-dev mode=664"
    notify: restart tomcat

  # update the spreg.war file
  - name: copy war
    copy: "src=../target/spreg.war dest=/data/webapps/spreg.war group=iam-dev mode=664"
    notify: restart tomcat

  # copy xmlsectool
  - name: copy xmlsectool
    synchronize: "src=../xmlsectool  dest={{ spreg_root }} "

  # run any handlers 
  - meta: flush_handlers

  # handlers mostly standard from iam-ansible

  - name: restart_tomcat
    command: /usr/bin/nohup /data/local/bin/ansible_command tomcat restart
    notify:
      - wait_for_tomcat

  # wait for tomcat to restart
  - name: wait_for_tomcat
    shell: "c=0;while [ $c -lt 20 ]; do [[ \"`curl -f http://localhost/tomcatmanager/text/list 2>/dev/null  | grep 'gws_grouper'`\" == *\"gws_grouper\"* ]] && exit 0; let c=c+1;sleep 5; done; exit 1"
    register: wait_result
    failed_when: "wait_result.rc != 0"


