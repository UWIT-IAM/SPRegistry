#
# spreg install playbook
#

- hosts: "{{ target }}"
  serial: 1
  max_fail_percentage: 10
  gather_facts: false
  remote_user: iamcert

  vars:
    app_name: spreg
    spreg_root: /data/local/spreg
    spreg_spRegistryUrl: https://iam-tools-test.u.washington.edu/spreg/

  tasks:
  # copy spreg properties file
  # change restarts tomcat
  - name: copy properties file
    copy: "src=../spreg.properties.{{ cluster_type }}  dest={{ spreg_root }}/spreg.properties group=iam-dev mode=664"
    notify:
      - restart tomcat
 
  # configure tomcat startup properties # change restarts tomcat
  # - name: tomcat startup params
  #   daemon_config: "service=tomcat key=spreg.properties.path value=file:{{ spreg_root }}"
  #   notify: restart tomcat

  # copy http apache config; change restarts httpd
  - name: copy http apache config
    template:
      src: apache/http.j2
      dest: /data/conf/apache.conf.d/http.spreg group=iam-dev mode=644
    notify: restart apache

  - name: copy https apache config
    template:
      src: apache/https.j2
      dest: /data/conf/apache.conf.d/https.spreg group=iam-dev mode=644
    notify: restart apache

  # copy the attributes data file
  # until this is in the database 
  - name: copy attribute data
    copy: "src=../attribute.xml dest={{ spreg_root }}/attribute.xml group=iam-dev mode=664"
    notify: restart tomcat

  # update the spreg.war file
  - name: copy war
    copy: "src=../target/{{ app_name }}.war dest=/data/webapps/{{ app_name }}.war group=iam-dev mode=664"
    notify: restart tomcat

  # copy xmlsectool
  - name: copy xmlsectool
    synchronize: "src=../xmlsectool  dest={{ spreg_root }} "

  # run any handlers 
  - meta: flush_handlers

  # handlers mostly standard from iam-ansible

  handlers:

  - name: restart apache
    command: /usr/bin/nohup /data/local/bin/ansible_command apache restart
#   notify:
#     - wait_for_apache

  - name: restart tomcat
    command: /usr/bin/nohup /data/local/bin/ansible_command tomcat restart
    notify: wait for tomcat

  # wait for tomcat to restart
  - name: wait for tomcat
    shell: "c=0;while [ $c -lt 20 ]; do [[ \"`curl -k -f https://localhost/tomcatmanager/text/list 2>/dev/null  | grep 'spreg'`\" =~ 'spreg' ]] && exit 0; let c=c+1;sleep 5; done; exit 1"
    register: wait_result
    failed_when: "wait_result.rc != 0"
